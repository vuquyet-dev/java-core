package RegularExpression;

import java.util.regex.*; // ‚úÖ Import th∆∞ vi·ªán regex c·ªßa Java

public class RegexAllMethodsDemo {
    public static void main(String[] args) {
        // ‚úÖ T·∫°o Pattern v·ªõi regex: "(\\d{2})-(\\w+)"
        // Kh·ªõp: 2 ch·ªØ s·ªë + d·∫•u '-' + 1 ho·∫∑c nhi·ªÅu k√Ω t·ª± ch·ªØ, kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng, h·ªó tr·ª£ multiline
        Pattern pattern = Pattern.compile("(\\d{2})-(\\w+)", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE);

        // ‚úÖ Chu·ªói ƒë·ªÉ t√¨m ki·∫øm
        String text = "12-abc\n34-DEF\n56-Ghi";

        // ‚úÖ T·∫°o Matcher t·ª´ pattern & text
        Matcher matcher = pattern.matcher(text);

        // ‚úÖ D√πng find() l·∫∑p qua t·ª´ng k·∫øt qu·∫£ kh·ªõp
        while (matcher.find()) {
            System.out.println("üîπ Found: " + matcher.group()); // To√†n b·ªô k·∫øt qu·∫£ kh·ªõp

            // ‚úÖ L·∫•y c√°c nh√≥m (group1: 2 ch·ªØ s·ªë, group2: ch·ªØ c√°i)
            for (int i = 1; i <= matcher.groupCount(); i++) {
                System.out.println("   ‚ú® Group " + i + ": " + matcher.group(i));
            }

            // ‚úÖ start(), end(): V·ªã tr√≠ b·∫Øt ƒë·∫ßu/k·∫øt th√∫c c·ªßa kh·ªõp trong chu·ªói
            System.out.println("   üìå Starts at: " + matcher.start() + ", ends at: " + matcher.end());
        }

        // ‚úÖ reset() gi√∫p ƒë·∫∑t l·∫°i matcher v·ªÅ tr·∫°ng th√°i ban ƒë·∫ßu ƒë·ªÉ qu√©t l·∫°i t·ª´ ƒë·∫ßu
        matcher.reset();

        // ‚úÖ lookingAt() ki·ªÉm tra xem pattern kh·ªõp ngay t·ª´ ƒë·∫ßu chu·ªói kh√¥ng
        if (matcher.lookingAt()) {
            System.out.println("üìå lookingAt: Chu·ªói b·∫Øt ƒë·∫ßu kh·ªõp pattern");
        } else {
            System.out.println("üìå lookingAt: Kh√¥ng kh·ªõp ngay ƒë·∫ßu chu·ªói");
        }

        // ‚úÖ matches() ki·ªÉm tra to√†n b·ªô chu·ªói c√≥ kh·ªõp pattern kh√¥ng
        if (matcher.matches()) {
            System.out.println("üìå matches: To√†n b·ªô chu·ªói kh·ªõp pattern");
        } else {
            System.out.println("üìå matches: To√†n b·ªô chu·ªói KH√îNG kh·ªõp pattern");
        }

        // ‚úÖ replaceAll(): thay t·∫•t c·∫£ c√°c k·∫øt qu·∫£ kh·ªõp b·∫±ng "XX-" + group2 (ch·ªØ c√°i)
        String replacedAll = matcher.replaceAll("XX-$2");

        // ‚úÖ replaceFirst(): ch·ªâ thay k·∫øt qu·∫£ kh·ªõp ƒë·∫ßu ti√™n b·∫±ng "YY-" + group2
        String replacedFirst = matcher.replaceFirst("YY-$2");

        // ‚úÖ In k·∫øt qu·∫£ thay th·∫ø
        System.out.println("üîπ replaceAll: " + replacedAll);
        System.out.println("üîπ replaceFirst: " + replacedFirst);

        // ‚úÖ usePattern() ƒë·ªÉ thay ƒë·ªïi pattern m√† matcher ƒëang s·ª≠ d·ª•ng
        Pattern newPattern = Pattern.compile("\\w+"); // Kh·ªõp c√°c chu·ªói t·ª´ (ch·ªØ + s·ªë)
        matcher.usePattern(newPattern); // G√°n pattern m·ªõi cho matcher

        matcher.reset(); // Reset matcher ƒë·ªÉ qu√©t l·∫°i v·ªõi pattern m·ªõi

        // ‚úÖ T√¨m c√°c t·ª´ kh·ªõp pattern m·ªõi trong chu·ªói
        while (matcher.find()) {
            System.out.println("üîπ usePattern match: " + matcher.group());
        }

        // ‚úÖ region() gi·ªõi h·∫°n matcher ch·ªâ qu√©t t·ª´ v·ªã tr√≠ 7 ƒë·∫øn cu·ªëi chu·ªói
        matcher.reset(text); // Reset v·ªõi chu·ªói g·ªëc ban ƒë·∫ßu
        matcher.region(7, text.length()); // ƒê·∫∑t v√πng qu√©t: t·ª´ k√Ω t·ª± th·ª© 7

        // ‚úÖ T√¨m trong v√πng qu√©t ƒë√£ ƒë·∫∑t
        while (matcher.find()) {
            System.out.println("üîπ region match: " + matcher.group());
        }

        // ‚úÖ hitEnd() ki·ªÉm tra n·∫øu matcher ƒë√£ qu√©t ƒë·∫øn cu·ªëi chu·ªói (th∆∞·ªùng d√πng khi x·ª≠ l√Ω stream)
        // ‚úÖ requireEnd() cho bi·∫øt n·∫øu c·∫ßn th√™m d·ªØ li·ªáu ƒë·ªÉ x√°c ƒë·ªãnh k·∫øt qu·∫£ kh·ªõp
        matcher.reset("56-Ghi"); // ƒê·∫∑t matcher v·ªÅ chu·ªói m·ªõi ng·∫Øn h∆°n
        matcher.find(); // T√¨m kh·ªõp trong chu·ªói n√†y

        // ‚úÖ In tr·∫°ng th√°i hitEnd v√† requireEnd
        System.out.println("üìå hitEnd: " + matcher.hitEnd());
        System.out.println("üìå requireEnd: " + matcher.requireEnd());

        // ‚úÖ pattern() tr·∫£ v·ªÅ pattern hi·ªán t·∫°i matcher ƒëang s·ª≠ d·ª•ng
        Pattern currentPattern = matcher.pattern();
        System.out.println("üìå Current pattern: " + currentPattern.pattern());

        // ‚úÖ flags() tr·∫£ v·ªÅ flags c·ªßa pattern hi·ªán t·∫°i
        System.out.println("üìå Flags: " + currentPattern.flags());
    }
}

package Exceptions.UncheckedExceptions;

import java.util.*;

/**
 * üìù ConcurrentModificationException:
 * - L√† m·ªôt runtime exception (unchecked exception) trong Java.
 * - X·∫£y ra khi thay ƒë·ªïi (th√™m/x√≥a) ph·∫ßn t·ª≠ trong collection trong l√∫c ƒëang duy·ªát b·∫±ng iterator/for-each.
 * - Nguy√™n nh√¢n:
 *     ‚ö†Ô∏è Collection b·ªã thay ƒë·ªïi trong khi ƒëang l·∫∑p, iterator ph√°t hi·ªán b·∫•t nh·∫•t d·ªØ li·ªáu.
 * - V√≠ d·ª• th∆∞·ªùng g·∫∑p: D√πng for-each ƒë·ªÉ l·∫∑p r·ªìi x√≥a ph·∫ßn t·ª≠ ngay trong v√≤ng l·∫∑p.
 */
public class ConcurrentModificationExceptionExample {
    public static void main(String[] args) {
        List<Integer> numbers = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));

        try {
            // üõë Duy·ªát b·∫±ng for-each r·ªìi x√≥a tr·ª±c ti·∫øp ‚Üí g√¢y ConcurrentModificationException
            for (Integer num : numbers) {
                if (num % 2 == 0) {
                    numbers.remove(num); // ‚ö†Ô∏è Thao t√°c kh√¥ng an to√†n!
                }
            }

            // ‚ö†Ô∏è D√≤ng d∆∞·ªõi s·∫Ω kh√¥ng ch·∫°y n·∫øu l·ªói x·∫£y ra
            System.out.println("K·∫øt th√∫c v√≤ng l·∫∑p!");

        } catch (ConcurrentModificationException e) {
            // üìå B·∫Øt l·ªói v√† in ra th√¥ng tin
            System.out.println("L·ªói ConcurrentModificationException: Kh√¥ng th·ªÉ thay ƒë·ªïi collection trong l√∫c duy·ªát!");
            System.out.println("Th√¥ng tin chi ti·∫øt: " + e.getMessage());
        }

        System.out.println("Ch∆∞∆°ng tr√¨nh k·∫øt th√∫c b√¨nh th∆∞·ªùng.");
    }
}
